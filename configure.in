AC_INIT(configure.in)
AM_INIT_AUTOMAKE(csl, 0.8)

DEFAULT_FLAGS="-fsigned-char -Wall -fno-strict-aliasing"
CFLAGS="$CFLAGS $DEFAULT_FLAGS"
CXXFLAGS="$CXXFLAGS $DEFAULT_FLAGS"

AC_LANG_CPLUSPLUS
AC_PROG_CXX
AC_PROG_CC
AM_PROG_LIBTOOL
AC_PROG_INTLTOOL
AC_PROG_RANLIB

GETTEXT_PACKAGE=csl
AC_SUBST(GETTEXT_PACKAGE)

ALL_LINGUAS="cs de nl"

AM_GLIB_GNU_GETTEXT
if test x$MSGFMT = "xno"
then
        AC_ERROR([

The msgfmt command is required to build bubblemaster.  If it is installed
on your system, ensure that it is in your path.  If it is not, install
GNU gettext to continue.
])
fi


WXCONFIG=wx-config
AC_ARG_WITH(wx-config,
[[  --with-wx-config=FILE   Use the given path to wx-config when determining
                          wxWidgets configuration; defaults to "wx-config"]],
[
    if test "$withval" != "yes" -a "$withval" != ""; then
        WXCONFIG=$withval
    fi
])

wxversion=0

AC_DEFUN([WXTEST],
[
    AC_REQUIRE([AC_PROG_AWK])
    AC_MSG_CHECKING([wxWidgets version])
    if wxversion=`$WXCONFIG --version`; then
        AC_MSG_RESULT([$wxversion])
    else
        AC_MSG_RESULT([not found])
        AC_MSG_ERROR([wxWidgets is required. Try --with-wx-config.])
    fi])

dnl Call WXTEST function
WXTEST

dnl Check for minimum wx version
vers=`echo $wxversion | $AWK 'BEGIN { FS = "."; } { printf "% d", ($1 * 1000 + $2) * 1000 + $3;}'`
if test -n "$vers" && test "$vers" -ge 2008000; then
    WX_CXXFLAGS="`$WXCONFIG --cxxflags | sed -e 's/-fno-exceptions//'`"
    WX_LIBS="`$WXCONFIG --libs`"
else
    AC_MSG_ERROR([wxWidgets 2.8.0 or newer is required])
fi

dnl GeoIP
internal_geoip="yes"
AC_CHECK_HEADERS(GeoIP.h,
    AC_CHECK_LIB(GeoIP, GeoIP_new,[
         internal_geoip="no"]))

if test "x$internal_geoip" = "xyes"; then
 GEOIP_LIBS="libGeoIP/libGeoIP.a"
else
 GEOIP_LIBS="-lGeoIP"
fi
AM_CONDITIONAL(with_internal_geoip,test "x$internal_geoip" = "xyes")


GEOIPDATADIR=""
internal_geoip_database="yes"
AC_ARG_WITH(geoip-datadir,
[[  --with-geoip-datadir=DIR   Use the given path for GeoIP database lookup]],
[
    if test "$withval" != "yes" -a "$withval" != ""; then
        internal_geoip_database="no"
        GEOIPDATADIR=$withval
    AC_DEFINE(CSL_EXTERNAL_GEOIP_DATABASE)
    fi
])
AM_CONDITIONAL(with_internal_geoipdatabase,test "x$internal_geoip_database" = "xyes")
AC_SUBST(GEOIPDATADIR)


dnl map config tool
cslmapcfgtool=yes
AC_ARG_WITH(cslmapcfgtool,
[[  --with-cslmapcfgtool    build the map config tool (default=yes)]],
 [cslmapcfgtool=$withval]
)
AM_CONDITIONAL(build_cslmapcfgtool,test "x$cslmapcfgtool" = "xyes")

dnl if test "$host_os" = "mingw32" -o "$host_os" = "cygwin"; then
dnl  CSL_FLAGS_INCLUDE="src/img/flags/win"
dnl else
dnl  CSL_FLAGS_INCLUDE="src/img/flags"
dnl fi
dnl AC_SUBST(CSL_FLAGS_INCLUDE)

CXXFLAGS="$CXXFLAGS $WX_CXXFLAGS"
AC_SUBST(WX_LIBS)
AC_SUBST(GEOIP_LIBS)

AC_OUTPUT(Makefile data/Makefile data/maps/Makefile \
	data/maps/Sauerbraten/254/Makefile data/maps/Sauerbraten/256/Makefile data/maps/Sauerbraten/Makefile \
	po/Makefile.in src/Makefile src/engine/Makefile src/libGeoIP/Makefile)

echo
echo --------------------------------------
echo $PACKAGE $VERSION

echo
echo wxWidgets version............. : $wxversion
echo
echo Need internal libGeoIP........ : $internal_geoip
echo Need internal GeoIP database.. : $internal_geoip_database
echo
echo Build map config tool......... : $cslmapcfgtool
echo --------------------------------------
echo
